// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, or any plugin's
// vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require rails-ujs
//= require jquery3
//= require jquery_ujs
//= require materialize
//= require cocoon
//= require toastr_rails
//= require_tree .

$(document).ready(function() {
  control = 0;

  setupDropDown();

  toastr.options = {
    "positionClass": "toast-top-left",
    "showDuration": "300",
    "timeOut": "3000",
    "showEasing": "swing",
    "hideEasing": "linear",
    "showMethod": "fadeIn",
    "hideMethod": "fadeOut"
  };
});

$(document).on('click', '.done', function() {
  var item_id;
  var item = $(this).closest('.row');
  var done = $(this).prop('checked') ? true : false;

  if ($(this).prop('type') === 'checkbox') {
    item_id = $(this).val();
  } else {
    item_id = $(this).closest('p').find('input').val();
  }

  $.ajax({
    url: '<%=Rails.application.routes.url_helpers.item_update_lists_path%>',
    type: 'GET',
    dataType: 'HTML',
    data: { item_id: item_id,
            done: done
          },
  })
  .done(function(lists) {
    $("#lists").html(lists);
    setupDropDown();
  });
});

$(document).on('click', '.color', function() {
  var list_id = $(this).closest('li').attr('id');
  var color = $(this).attr('id');

  $.ajax({
    url: '<%=Rails.application.routes.url_helpers.color_update_lists_path%>',
    type: 'GET',
    dataType: 'HTML',
    data: { list_id: list_id,
            color: color 
          },
  })
  .done(function(lists) {
    $("#lists").html(lists);
    setupDropDown();
  });
});

$(document).on('click', '.delete-item', function() {
  var item_id = $(this).attr('id');

  $.ajax({
    url: '<%=Rails.application.routes.url_helpers.delete_item_lists_path%>',
    type: 'GET',
    dataType: 'HTML',
    data: { item_id: item_id },
  })
  .done(function(lists) {
    $("#lists").html(lists);
    setupDropDown();
    flash('Item Apagado!');
  });
});

$(document).on('keyup', '.js-description', function() {
  var input        = $(this).attr('id');
  var description  = $(this).val();
  var inputControl = $('.js-description');

  if (description.length > 0 && control != input) {
    control = input;
    $('.js-add').click();
  } else if (description.length == 0 && inputControl.length > 1 && control == input) {
    var remove = $(this).closest('.nested-fields').find('.js-remove');
    
    control = input;
    remove.click();
  }
});

function adicionarLista() {
  $('#new_list').ajaxSubmit({
    dataType: 'html',
    success: processHtml
  });

  return false;
}

function apagarLista(list_id) {
  $.ajax({
    url: '<%=Rails.application.routes.url_helpers.list_destroy_lists_path%>',
    type: 'get',
    dataType: 'json',
    data: { list_id: list_id },
  })
  .done(function(response) {
    if (response) {
      $('#' + list_id).fadeOut(300, function() { 
        $(this).remove();
        flash('Lista Apagada!');
      });
    }
  });
}

function processHtml(data) {
  var div = $('.list').closest('.row');

  if ($(div).length == 0) {
    div = $('#lists').find('.row');
    div.prepend("<div id='' class='list'></div>");
    div = $('.list').closest('.row');
  } 

  $(div).prepend(data).hide().fadeIn(1000);
  setupDropDown();
  flash('Lista Criada!');
}

function setupDropDown() {
  $('.dropdown-button').dropdown();
}

function flash(text) {
  Materialize.toast(text, 4000)
}

function flashWithAction(text) {
  var $button       = '<button class="btn-flat toast-action">Desfazer</button>';
  var $toastContent = $('<span>'+ text +'</span>').add($($button));
  Materialize.toast($toastContent, 5000);
}